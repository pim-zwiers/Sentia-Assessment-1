{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Name of storage account"
        }
      },
      "dataLakeSAName": {
        "type": "string",
        "metadata": {
          "description": "Name of Data Lake Gen2 storage account"
        }
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "sentia",
        "metadata": {
          "description": "Admin username"
        }
      },
      "dnsNameforLBIP": {
        "type": "string",
        "metadata": {
          "description": "DNS for Load Balancer IP"
        }
      },
      "vmNamePrefix": {
        "type": "string",
        "defaultValue": "WebVM",
        "metadata": {
          "description": "Prefix to use for VM names"
        }
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "metadata": {
          "description": "Image SKU"
        }
      },
      "lbName": {
        "type": "string",
        "defaultValue": "LB",
        "metadata": {
          "description": "Load Balancer name"
        }
      },
      "nicNamePrefix": {
        "type": "string",
        "defaultValue": "NIC",
        "metadata": {
          "description": "Network Interface name prefix"
        }
      },
      "publicIPAddressName": {
        "type": "string",
        "defaultValue": "PublicIP",
        "metadata": {
          "description": "Public IP Name"
        }
      },
      "VMPublicIPAddressName": {
        "type": "string",
        "defaultValue": "VMPublicIP",
        "metadata": {
          "description": "Virtual Machines Public IP Name"
        }
      },
      "vnetName": {
        "type": "string",
        "defaultValue": "VNET",
        "metadata": {
          "description": "VNET name"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D1_v2",
        "metadata": {
          "description": "Size of the VM"
        }
      },
      "numberOfInstances": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of instances"
        }
      },
      "adminPublicKey": {
        "type": "string",
        "metadata": {
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        }
      }
    },
    "variables": {
      "storageAccountType": "Standard_LRS",
      "availabilitySetName": "AvailabilitySet",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet-1",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressType": "Dynamic",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables ('subnetName'))]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
      "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
      "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[parameters('storageAccountName')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "tags": {
          "Role": "storage",
          "Environment": "DEV"
        },
        "properties": {
          "accountType": "[variables('storageAccountType')]"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-04-01",
        "name": "[parameters('dataLakeSAName')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
        ],
        "location": "[resourceGroup().location]",
        "tags": {
          "Role": "storage",
          "Environment": "DEV"
        },
        "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
        },
        "kind": "StorageV2",
        "properties": {
          "isHnsEnabled": true,
          "networkAcls": {
              "bypass": "AzureServices",
              "virtualNetworkRules": [{
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('subnetName'))]",
                  "action": "Allow"
              }],
              "defaultAction": "Deny"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
              "services": {
                  "file": {
                      "enabled": true
                  },
                  "blob": {
                      "enabled": true
                  }
              },
              "keySource": "Microsoft.Storage"
          },
          "accessTier": "Hot"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices",
        "apiVersion": "2019-04-01",
        "name": "[concat(parameters('dataLakeSAName'), '/default')]",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeSAName'))]"
        ],
        "properties": {
            "cors": {
                "corsRules": []
            },
            "deleteRetentionPolicy": {
                "enabled": false
            }
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[variables('availabilitySetName')]",
        "apiVersion": "2016-04-30-preview",
        "location": "[resourceGroup().location]",
        "tags": {
          "Role": "availability",
          "Environment": "DEV"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 2,
          "managed": true
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "Role": "networking",
          "Environment": "DEV"
        },
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsNameforLBIP')]"
          }
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('VMPublicIPAddressName'), copyindex())]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMPublicIPLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "tags": {
          "Role": "networking",
          "Environment": "DEV"
        },
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        }
      },
      {
        "apiVersion": "2016-12-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('vnetName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "Role": "networking",
          "Environment": "DEV"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "serviceEndpoints": [
                    {
                        "provisioningState": "Succeeded",
                        "service": "Microsoft.Storage",
                        "locations": [
                            "[resourceGroup().location]"
                        ]
                    }
                ],
                "delegations": []
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('nicNamePrefix'), copyindex())]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
          "[concat('Microsoft.Network/publicIPAddresses/',parameters('VMPublicIPAddressName'), copyindex())]",
          "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]",
          "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'), '/inboundNatRules/', 'SSH-VM', copyIndex())]"
        ],
        "tags": {
          "Role": "networking",
          "Environment": "DEV"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId ('Microsoft.Network/publicIPAddresses/', concat(parameters('VMPublicIPAddressName'), copyindex()))]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "[concat(variables('lbID'),'/inboundNatRules/SSH-VM', copyindex())]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "name": "[parameters('lbName')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
        ],
        "tags": {
          "Role": "networking",
          "Environment": "DEV"
        },
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "BackendPool1"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbPoolID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID')]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-09-01",
        "type": "Microsoft.Network/loadBalancers/inboundNatRules",
        "name": "[concat(parameters('lbName'), '/', 'SSH-VM', copyIndex())]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "lbNatLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
          "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
        ],
        "properties": {
          "frontendIPConfiguration": {
            "id": "[variables('frontEndIPConfigID')]"
          },
          "protocol": "Tcp",
          "frontendPort": "[copyIndex(2200)]",
          "backendPort": 22,
          "enableFloatingIP": false
        }
      },
      {
        "apiVersion": "2018-10-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",
          "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
        ],
        "tags": {
          "Role": "web-server",
          "Environment": "DEV"
        },
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('adminPublicKey')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
            }
          }
        }
      }
    ]
  }